<?xml version="1.0"?>
<configuration>
	<placeholders>
		<placeholder id="template_name">MS Dynamics and Salesforce Contact Aggregation</placeholder>
	</placeholders>
	<sections>
		<section id="use_case">
As an admin I want to aggregate contacts from Salesforce and MS Dynamics instances and compare them to see which contacts can only be found in one of the two and which contacts are in both instances. 

This template:

- Generates the result in the format of a CSV report sent by mail.
- Serves as a foundation for extracting data from two systems, aggregating data, comparing values of fields for the objects, and generating a report on the differences. 
- Gets contacts from Salesforce and MS Dynamics, compares by the email address of the contacts, and generates a CSV file which shows contact name in Salesforce, contact name in MS Dynamics, Email and contacts IDs in Salesforce and MS Dynamics. The report is sent by the email to a configured group of email addresses.
		</section>
		<section id="considerations">
<![CDATA[
To make this template run, follow the steps in the correct order. **Failing to do so could lead to unexpected behavior of the template.**
]]>
		</section>
		<section id="running_on_cloudhub">
<![CDATA[
After your app is configured and started, if you choose the `msdynandsfdccontactaggregation` domain name to trigger the use case, browse to `http://msdynandsfdccontactaggregation.cloudhub.io/generatereport`, which creates the report and sends it to the emails configured.
]]>
		</section>
		<section id="default_running_on_premise">
<![CDATA[
After this, to trigger the use case, browse to the local HTTP endpoint with the port you configured in common.properties. If this is for instance, port `9090`, then browse to `http://localhost:9090/generatereport`, which creates the CSV report and sends it to the mails set.
]]>
		</section>
		<section id="application_configuration">
		<![CDATA[
**HTTP Connector configuration**   
+ http.port `9090` 

**Salesforce Connector configuration**
+ sfdc.username `bob.dylan@orga`
+ sfdc.password `DylanPassword123`
+ sfdc.securityToken `avsfwCUl7apQs56Xq2AKi3X`

**MS Dynamics Connector configuration**
+ msdyn.user `user@yourorg.onmicrosoft.com`
+ msdyn.password `yourPassword`
+ msdyn.url `https://yourorg.api.crm4.dynamics.com/XRMServices/2011/Organization.svc`
+ msdyn.retries `2`

**SMTP Services configuration**
+ smtp.host `smtp.gmail.com`
+ smtp.port `587`
+ smtp.user `exampleuser@gmail.com`
+ smtp.password `ExamplePassword456`

**Mail details**
+ mail.from `exampleuser1@gmail.com`
+ mail.to `exampleuser2@gmail.com`
+ mail.subject `SFDC Contacts Report`
+ mail.body `Contacts report comparing contacts from SFDC Accounts`
+ attachment.name `report.csv`
]]>
		</section>
		<section id="api_calls">
		<![CDATA[
Salesforce imposes limits on the number of API calls that can be made. However, we make API calls to Salesforce only once during aggregation.
]]>
		</section>
		<section id="default_endpoints_xml">
		<![CDATA[
This is the file where you find the endpoint to start the aggregation. This template uses an HTTP Listener as the way to trigger the use case.

$H$H# Trigger Flow
**HTTP Listener** - Start Report Generation
+ `${http.port}` is set as a property to be defined either on a property file or in CloudHub environment variables.
+ The path configured by default is `generatereport`, which you are free to change to the one you prefer.
+ The host name for all endpoints in a CloudHub configuration is `localhost`. CloudHub then routes requests from your application domain URL to the endpoint.
]]>
		</section>
		<section id="default_business_logic_xml">
		<![CDATA[
The functional aspect of the template is implemented in this XML, directed by one flow responsible of conducting the aggregation of data, comparing records and finally formatting the output, in this case being a report.
        
Using Scatter-Gather component we are querying the data in different systems. After that the aggregation is implemented in DataWeave 2 script using Transform component.
Aggregated results are sorted by source of existence:

1. Accounts only in Salesforce
2. Accounts only in MS Dynamics
3. Accounts in both Salesforce and MS Dynamics

The results are transformed to the CSV format. The final report in CSV format is sent to the email addresses you configure in the `mule.\*.properties` file.
]]>
		</section>
	</sections>
</configuration>
